DROP TABLE IF EXISTS movie;
--> CREATE TABLE movie AS SELECT * FROM CSVREAD('classpath:movie.csv', null, 'fieldSeparator=;');
CREATE TABLE movie (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    YEARS INTEGER,
    TITLE VARCHAR(255),
    STUDIOS VARCHAR(255),
    PRODUCERS VARCHAR(255),
    WINNER VARCHAR(255)
);
INSERT INTO movie (YEARS, TITLE, STUDIOS, PRODUCERS, WINNER) SELECT * FROM CSVREAD('classpath:movie.csv', null, 'fieldSeparator=;');

UPDATE movie SET winner = 1 WHERE winner = 'yes';
UPDATE movie SET winner = 0 WHERE winner IS NULL;

DROP TABLE IF EXISTS producer;
CREATE TABLE producer AS SELECT DISTINCT producers FROM movie;
ALTER TABLE producer ADD COLUMN ID BIGINT GENERATED BY DEFAULT AS IDENTITY DEFAULT ON NULL NOT NULL FIRST;
ALTER TABLE producer ADD COLUMN min_interval INTEGER;
ALTER TABLE producer ADD COLUMN max_interval INTEGER;
ALTER TABLE producer ADD COLUMN min_previous_year INTEGER;
ALTER TABLE producer ADD COLUMN min_following_year INTEGER;
ALTER TABLE producer ADD COLUMN max_previous_year INTEGER;
ALTER TABLE producer ADD COLUMN max_following_year INTEGER;

UPDATE movie SET producers = (SELECT ID FROM producer WHERE producer.producers = movie.producers);

DROP TABLE IF EXISTS studio;
CREATE TABLE studio AS SELECT DISTINCT studios FROM movie;
ALTER TABLE studio ADD COLUMN ID BIGINT GENERATED BY DEFAULT AS IDENTITY DEFAULT ON NULL NOT NULL FIRST;

UPDATE movie SET studios = (SELECT ID FROM studio WHERE studio.studios = movie.studios);

--> with producer_intervals as (
-->     SELECT producers, (years - LAG(years) OVER (PARTITION BY producers ORDER BY years)) as x_interval, years FROM movie WHERE producers IN (SELECT producers FROM movie WHERE winner = 1 GROUP BY producers HAVING COUNT(producers) > 1) ORDER BY producers, years
--> )
--> UPDATE producer SET min_interval = (SELECT MIN(x_interval) FROM producer_intervals WHERE producer_intervals.producers = producer.ID),
--> max_interval = (SELECT MAX(x_interval) FROM producer_intervals WHERE producer_intervals.producers = producer.ID);

with producer_intervals as (
    SELECT producers, (years - LAG(years) OVER (PARTITION BY producers ORDER BY years)) as x_interval,
    years,
    LAG(years, 1) OVER (PARTITION BY producers ORDER BY years) as prev_years,
    FROM movie WHERE producers IN (SELECT producers FROM movie WHERE winner = 1 GROUP BY producers HAVING COUNT(producers) > 1) ORDER BY producers, years
) UPDATE producer SET
min_interval = (SELECT MIN(x_interval) FROM producer_intervals WHERE producer_intervals.producers = producer.ID),
max_interval = (SELECT MAX(x_interval) FROM producer_intervals WHERE producer_intervals.producers = producer.ID),
min_previous_year = (SELECT prev_years FROM producer_intervals WHERE producer_intervals.producers = producer.ID
    AND x_interval = (SELECT MIN(x_interval) FROM producer_intervals WHERE producer_intervals.producers = producer.ID)),
min_following_year = (SELECT years FROM producer_intervals WHERE producer_intervals.producers = producer.ID
    AND x_interval = (SELECT MIN(x_interval) FROM producer_intervals WHERE producer_intervals.producers = producer.ID)),
max_previous_year = (SELECT prev_years FROM producer_intervals WHERE producer_intervals.producers = producer.ID
    AND x_interval = (SELECT MAX(x_interval) FROM producer_intervals WHERE producer_intervals.producers = producer.ID)),
max_following_year = (SELECT years FROM producer_intervals WHERE producer_intervals.producers = producer.ID
    AND x_interval = (SELECT MAX(x_interval) FROM producer_intervals WHERE producer_intervals.producers = producer.ID));

--> select the winner movies where producer won the award more than once
--> SELECT * FROM movie WHERE winner = 1 AND producers IN (SELECT producers FROM movie WHERE winner = 1 GROUP BY producers HAVING COUNT(producers) > 1);

-->ID  	YEARS  	TITLE  	STUDIOS  	PRODUCERS  	WINNER
-->26	1984	Bolero	7	24	1
-->57	1990	Ghosts Can't Do It	51	24	1

--> select the years value difference as diff between the first and the last award for each producer
--> SELECT producers, MAX(years) - MIN(years) as diff FROM movie WHERE producers IN (SELECT producers FROM movie WHERE winner = 1 GROUP BY producers HAVING COUNT(producers) > 1) GROUP BY producers;

--> select the min_interval and max_interval for each producer using LAG function
--> SELECT producers, LAG(years, 1) OVER (PARTITION BY producers ORDER BY years) as min_interval, years as max_interval FROM movie WHERE producers IN (SELECT producers FROM movie WHERE winner = 1 GROUP BY producers HAVING COUNT(producers) > 1) ORDER BY producers, years;

--> select the min_interval for each producer using LAG function
--> SELECT producers, (years - LAG(years) OVER (PARTITION BY producers ORDER BY years)) as min_interval FROM movie WHERE producers IN (SELECT producers FROM movie WHERE winner = 1 GROUP BY producers HAVING COUNT(producers) > 1) ORDER BY producers, years;
--> PRODUCERS  	MIN_INTERVAL
--> 1	null
--> 1	1
--> 1	9

--> select from the result above the row that has the lowest  min_interval
-->SELECT PRODUCERS, MAX(MAX_INTERVAL) FROM (SELECT producers, (years - LAG(years) OVER (PARTITION BY producers ORDER BY years)) as max_interval FROM movie WHERE producers IN (SELECT producers FROM movie WHERE winner = 1 GROUP BY producers HAVING COUNT(producers) > 1) ORDER BY producers, years) GROUP BY producers;
--> PRODUCERS  	MAX(MAX_INTERVAL)
--> 24	6
--> 8	12

-->SELECT PRODUCERS, MIN(MIN_INTERVAL) FROM (SELECT producers, (years - LAG(years) OVER (PARTITION BY producers ORDER BY years)) as min_interval FROM movie WHERE producers IN (SELECT producers FROM movie WHERE winner = 1 GROUP BY producers HAVING COUNT(producers) > 1) ORDER BY producers, years) GROUP BY producers;
--> PRODUCERS  	MIN(MIN_INTERVAL)
--> 24	6
--> 8	4